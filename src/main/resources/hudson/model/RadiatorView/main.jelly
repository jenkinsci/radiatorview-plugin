<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	xmlns:i="jelly:fmt">
	<meta name="apple-mobile-web-app-capable" content="yes" />
	<meta http-equiv="refresh" content="${from.refresh}" />
	<j:choose>
		<j:when test="${empty from.getBrokenImage()}">
			<j:set var="brokenBackground" value="" />
		</j:when>
		<j:otherwise>
			<j:set var="brokenBackground" value="background-image: url(${from.getBrokenImage()}); background-size: contain; background-repeat: no-repeat; background-position: center center;" />
		</j:otherwise>
	</j:choose>
	<j:choose>
		<j:when test="${empty from.getUnstableImage()}">
			<j:set var="unstableBackground" value="" />
		</j:when>
		<j:otherwise>
			<j:set var="unstableBackground" value="background-image: url(${from.getUnstableImage()}); background-size: contain; background-repeat: no-repeat; background-position: center center;" />
		</j:otherwise>
	</j:choose>
	<j:choose>
		<j:when test="${empty from.getSuccessImage()}">
			<j:set var="successBackground" value="" />
		</j:when>
		<j:otherwise>
			<j:set var="successBackground" value="background-image: url(${from.getSuccessImage()}); background-size: contain; background-repeat: no-repeat; background-position: center center;" />
		</j:otherwise>
	</j:choose>
	<j:choose>
		<j:when test="${empty from.getOtherImage()}">
			<j:set var="otherBackground" value="" />
		</j:when>
		<j:otherwise>
			<j:set var="otherBackground" value="background-image: url(${from.getOtherImage()}); background-size: contain; background-repeat: no-repeat; background-position: center center;" />
		</j:otherwise>
	</j:choose>

	<style type="text/css">
		#header{
		display:none;
		}
		#side-panel{
		display:none;
		}
		#view-message{
		display:none;
		}
		
		#radiatorconfig
		{
		position:fixed;
		right:0; top:0;
		z-index:65535;
		}

		ul.config li.config
		{
		display: block;
		width: auto;
		height: 16px;
		overflow: hidden;
		}

		ul.config
		li.config:hover {
		height: auto;
		width: 150px;
		overflow: visible;
		background-color:#ddd;
		-webkit-border-bottom-left-radius: 10px;
		-moz-border-radius-bottomleft: 10px;
		border-bottom-left-radius: 10px;
		border: solid black 1px;
		padding-left:10px;
		padding-bottom:10px;
		}

		.building
		{
		opacity:
		0.6; -moz-opacity:0.6; -webkit-opacity:0.6;
		filter:alpha(opacity=60);
		}

		ul.menu li.menu
		{
		display: block;
		width: auto;
		height: 40px;
		overflow: hidden;
		}

		ul.menu
		li.menu:hover {
		height: 90%;
		width: auto;
		overflow: auto;
		background-color:#ddd;

		background: rgb(240, 240, 240) transparent;
		background: rgba(240, 240, 240, 0.6);
		/* For IE 5.5 - 7*/
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#dddddd00,
		endColorstr=#dddddd00);
		/* For IE 8*/
		-ms-filter:
		"progid:DXImageTransform.Microsoft.gradient(startColorstr=#dddddd00,
		endColorstr=#dddddd00)";


		-webkit-border-radius: 10px;
		-moz-border-radius: 10px;
		border-radius: 10px;
		border: solid black
		1px;
		padding-right:10px;
		padding-bottom:10px;
		}

		a.nolink {
		text-decoration: none;
		}

		a:hover {
		position: relative;
		}

		a span {
		display: none;
		}

		a:hover span {
		display: block;
		position: absolute; top: 10px; left: 0;
		/* formatting only styles */
		padding: 5px; margin: 10px; z-index: 100;
		background: #f0f0f0; border: 1px dotted #c0c0c0;
		opacity: 0.9;
		/* end formatting */
		}

		.job {
		-webkit-box-shadow:inset 0 0 10px #000000;
		box-shadow:inset 0 0 10px #000000;
		position:		absolute;
		overflow: hidden;
		-moz-border-radius: 10px;
		-webkit-border-radius: 10px;
		-border-radius: 10px;
		}

		.jobtitle {
		font-weight:bold; text-shadow: 1px 1px 1px #000;
		}

		.failing {
		background-image: -webkit-gradient(
		linear,
		left bottom,
		left top,
		color-stop(0.19, rgb(193,63,63)),
		color-stop(0.6, rgb(235,26,36))
		);
		background-image: -moz-linear-gradient(
		center bottom,
		rgb(193,63,63) 19%,
		rgb(235,26,36) 60%
		);
		${brokenBackground}
		}

		.successful {
		background-image: -webkit-gradient(
		linear,
		left bottom,
		left top,
		color-stop(0.05, rgb(64,122,75)),
		color-stop(0.53, rgb(0,138,44))
		);
		background-image: -moz-linear-gradient(
		center bottom,
		rgb(64,122,75) 5%,
		rgb(0,138,44) 53%
		);
		${successBackground}
		}

		.claimed {
		background-image: -webkit-gradient(
		linear,
		left bottom,
		left top,
		color-stop(0.25, rgb(196,172,53)),
		color-stop(0.82, rgb(240,172,0))
		);
		background-image: -moz-linear-gradient(
		center bottom,
		rgb(196,172,53) 25%,
		rgb(240,172,0) 82%
		);
		}

		.unstable {
		background-image: -webkit-gradient(
		linear,
		left bottom,
		left top,
		color-stop(0.6, rgb(224,224,0)),
		color-stop(0.9, yellow)
		);
		background-image: -moz-linear-gradient(
		center bottom,
		rgb(224,224,0) 60%,
		yellow 90%
		);
		${unstableBackground}
		}

		.never {
		${otherBackground}
		}

		.dashboard {
		position: absolute;
		overflow: hidden;
		left: 0px;
		right: 0px;
		bottom: 0px;
		z-index: 65530;
		width: 99vw !important;
		height: calc(99vh - 2em) !important;
		}

		#caption {
		position: absolute;
		top: 0px;
		left: 0px;
		right: 0px;
		font-weight: bold;
		text-align: center;
		text-shadow: 2px 2px 5px #909090;
		}
		
	</style>
	<j:choose>
		<j:when test="${empty(items)}">
			<st:include page="noJob.jelly" />
		</j:when>
		<j:otherwise>
			<t:setIconSize />
			
			<!-- config option: dark or light backgrounds. -->
			<j:choose>
				<j:when test="${from.getHighVis()}">
					<j:set var="dashStyle" value="background-color: black;" />
					<j:set var="captionStyle" value="background-color: black; color: white;" />
				</j:when>
				<j:otherwise>
					<j:set var="dashStyle" value="background-color: white; background-image: url(${rootURL}/static/0360aadc/images/hudson.png);
							background-repeat: no-repeat; background-position: left bottom;" />
					<j:set var="captionStyle" value="background-color: white; color: #c0c0c0;" />
				</j:otherwise>
			</j:choose>
			
			<j:if test="${from.getShowBuildStability()}">
				<j:set var="showBuildStability" value="true" />
			</j:if>
			
			
			<j:choose>
				<j:when test="${empty from.getCaptionSize()}">
					<j:set var="captionSize" value="36" />
				</j:when>
				<j:otherwise>
					<j:set var="captionSize" value="${from.getCaptionSize()}" />
				</j:otherwise>
			</j:choose>
			
			<j:choose>
				<j:when test="${empty from.getCaptionText()}">
					<j:set var="captionPosition" value="font-size: 0px;" />
					<j:set var="dashPosition" value="top: 0px;" />
				</j:when>
				<j:otherwise>
					<j:set var="captionPosition" value="height: ${captionSize + captionSize / 3}pt; font-size: ${captionSize}pt;" />
					<j:set var="dashPosition" value="top: ${captionSize + captionSize / 3}pt;" />
				</j:otherwise>
			</j:choose>
			
			<div id="caption" style="${captionPosition} ${captionStyle}">${from.getCaptionText()}</div>
			
			<div id="radiatorconfig">
				<ul class="config" style="margin:0; padding:0;">
					<li class="config">
						<p align="right" style="margin:0; padding:0;">
							<img src="${rootURL}/images/16x16/help.png" />
						</p>
						<h2>Radiator View</h2>
						<ul>
							<li>
								<a href="configure">Configure View</a>
							</li>
							<li>
								<a href="delete">Delete View</a>
							</li>
							<li>
								<a href="../../">Jenkins Home</a>
							</li>
							<li>
								<a href="https://wiki.jenkins-ci.org/display/JENKINS/Radiator+View+Plugin">About</a>
							</li>
						</ul>
					</li>
				</ul>
			</div>
			
			<!-- outer div to hide everything in the normal layout. -->
			<div class="dashboard" style="${dashPosition} ${dashStyle}">
				
				<j:choose>
					<j:when test="${from.getGroupByPrefix()}">
						<j:invoke var="projects" on="${from}" method="getContentsByPrefix" />
						<st:include page="projects.jelly" />
					</j:when>
					<j:otherwise>
						<j:invoke var="contents" on="${from}" method="getContents" />
						<st:include page="jobs.jelly" />
					</j:otherwise>
				</j:choose>
				
			</div>
		</j:otherwise>
	</j:choose>
</j:jelly>
