<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	xmlns:i="jelly:fmt">
	<!--  Display details about a single job in the radiator -->

	<!-- show in a different style if the job is building or queued.  -->
	<j:set var="clazz" value="normal" />
	<j:if test="${job.building || job.queued}">
		<j:set var="clazz" value="building" />
	</j:if>
	<div style="${jobStyle} font-size: ${jobFont}; font-weight: bold; background-color:${job.backgroundColor}; display: block; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;"
		class="job ${job.getStatus()} ${clazz}" tooltip="${job.name}">

		<!--  Build health icon -->
		<j:if test="${showBuildStability}">
			<img src="${rootURL}/images/${iconSize}/${job.job.buildHealth.iconUrl}"
				alt="${job.job.buildHealth.description}" />
		</j:if>
			
		<!--  Job Name Title -->
		<a style="color: ${job.color}; padding-left: 1%;"
				href="${rootURL}/${job.lastBuildUrl}">${job.name.replaceAll('/',' âˆ• ')}</a>
		<!-- the slash above if present is the Unicode "Division Character, not the typical one, looking nicer
		 See http://www.fileformat.info/info/unicode/char/2215/index.htm-->
		
		<!-- Job Claim Information -->
		<j:if test="${job.isClaimed()}">
			<p>${job.getClaim()}</p>
		</j:if>
		<!-- Details of any test failures -->
		<p>
			<j:if test="${job.broken == false}">
				<j:if test="${job.failCount == 1}">
					<font
						style="text-align=center; color: #000000; font-size: ${failFont}; font-weight:bold;">1/${job.testCount} test failure</font>
				</j:if>
				<j:if test="${ job.failCount > 1}">
					<font
						style="text-align=center; color: #000000; font-size: ${failFont}; font-weight:bold;">${job.failCount}/${job.testCount} test failures</font>
				</j:if>
				<j:if test="${job.diff != ''}">
					(
					<font color="${job.diffColor}">${job.diff}</font>
					tests
					)
				</j:if>
			</j:if>
		</p>
		<!--  Details of current Runs -->
		<j:forEach var="run" items="${job.buildsInProgress}">
			<p>Now building: ${run.displayName}, ${run.executor.progress}% -
				${run.executor.estimatedRemainingTime} left</p>
		</j:forEach>
		<j:if test="${job.queued == true}">
			<p>Build pending ${job.queueStatus} in queue</p>
		</j:if>
		<j:if test="${!job.getStable()}">
			<j:if test="${job.getCulprit() != &quot; - &quot;}">
				<p>Possible culprit: ${job.culprit}</p>
			</j:if>
			<j:if test="${job.getLastStableBuild() != null}">
				<p>
					Last Stable Build:
					<strong>${job.getLastStableBuild()}</strong>
				</p>
			</j:if>
		</j:if>
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
		<br />
	</div>

</j:jelly>
